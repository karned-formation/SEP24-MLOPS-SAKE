@startuml Basic Sample
!$SYSTEM_BORDER_COLOR ?= "#000000"
!include https://raw.githubUsercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
HIDE_STEREOTYPE()
AddElementTag(SystemDb_colors, $bgColor=SkyBlue, $fontColor=black)

SystemDb_Ext(Data_Source_Training, "Data_Source_Training", "selected images by Data Scientist", $tags="SystemDb_colors") 
SystemDb_Ext(OCR_Model, "OCR_Model", $tags="SystemDb_colors") 
SystemDb_Ext(Data_Source_Production, "Data_Source_Production", "selected images by User", $tags="SystemDb_colors") 
System_Boundary(System_classifier, "Classifier")  {
    System_Boundary(Development_Zone, "Development_Zone")  {
        System(ML_Experiment_Pipeline, "ML_Experiment_Pipeline")
    }
    SystemDb(Dataset_Repository, "Dataset_Repository", $tags="SystemDb_colors") 
    SystemDb(Code_Repository, "Code_Repository", "Github", $tags="SystemDb_colors") 
    System_Boundary(MLFlow, "MLFlow")  {
        SystemDb(Model_Repository, "Model_Repository", $tags="SystemDb_colors") 
        SystemDb(ML_Metadata_Repository, "ML_Metadata_Repository", "model performance metrics", $tags="SystemDb_colors") 
    }
    System_Boundary(Serving_Zone, "Serving_Zone")  {
        System(Serving_Pipeline, "Serving_Pipeline")
        SystemDb(Log_Master, "Log_Master", $tags="SystemDb_colors") 
        SystemDb(Feedback_Database, "Feedback_Database", $tags="SystemDb_colors") 
    }
    System_Boundary(Monitoring_Zone, "Monitoring_Zone")  {
        System(Monitoring_Pipeline, "Monitoring_Pipeline")
    }
    System_Boundary(Continuous_Training_Zone, "Continuous_Training_Zone")  {
        System(ML_Training_Pipeline, "ML_Training_Pipeline")
    }
}
Person_Ext(User, "User")
Person_Ext(Admin, "Admin")

Rel(Data_Source_Training, ML_Experiment_Pipeline, "unstructured labelled images")
BiRel(ML_Experiment_Pipeline, Dataset_Repository, "cleaned labelled images")
Rel(OCR_Model, ML_Experiment_Pipeline, "optimized OCR Model")
BiRel(ML_Experiment_Pipeline, Code_Repository, "code")
Rel(ML_Experiment_Pipeline, Model_Repository, "produces")
Rel(ML_Experiment_Pipeline, ML_Metadata_Repository, "generates")
Rel(Model_Repository, Serving_Pipeline, "ML Models")
Rel(Data_Source_Production, Serving_Pipeline, "unlabelled images")
BiRel(Serving_Pipeline, Log_Master, "Images with Predictions")
Rel(Serving_Pipeline, User, "proposed labelled images")
Rel(User,Serving_Pipeline, "label validation")
Rel(Serving_Pipeline, Feedback_Database, "label validation")
Rel(Code_Repository, Monitoring_Pipeline, "current metrics")
Rel(ML_Metadata_Repository, Monitoring_Pipeline, "current metrics")
Rel(Log_Master, Monitoring_Pipeline, "original predictions")
Rel(Feedback_Database, Monitoring_Pipeline, "corrected predictions")
Rel(Monitoring_Pipeline, Dataset_Repository, "updates")
Rel(Monitoring_Pipeline, ML_Training_Pipeline, "trigger")
BiRel_U(Admin, Monitoring_Pipeline, "interacts")
Rel(Dataset_Repository, ML_Training_Pipeline, "Training/Validation/Test data")
Rel(ML_Training_Pipeline, Model_Repository, "Updates")
Rel(Model_Repository, ML_Training_Pipeline, "Gets")

SHOW_FLOATING_LEGEND()

@enduml