@startuml System_classification_docs_simple
!$SYSTEM_BORDER_COLOR ?= "#000000"
!include https://raw.githubUsercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
HIDE_STEREOTYPE()
AddElementTag(SystemDb_colors, $bgColor=SkyBlue, $fontColor=black)

'!include System_classification_docs__Dataset_Repo.puml
'!include System_classification_docs__Model_Repo.puml
'!include System_classification_docs__Code_repo.puml

' Development Zone
SystemDb_Ext(Data_Source_Training, "Data_Source_Training", "selected images by Data Scientist", $tags="SystemDb_colors") 
SystemDb_Ext(OCR_Model, "OCR_Model", $tags="SystemDb_colors") 
System_Boundary(System_classifier, "Classifier")  {
    System_Boundary(Development_Zone, "Development_Zone")  {
    }
}
Person_Ext(Data_Scientist, "Data_Scientist")

Rel(Data_Source_Training, Development_Zone, "unstructured labelled images")
Rel(OCR_Model, Development_Zone, "optimized OCR Model")
Rel(Data_Scientist, Development_Zone, "develops")
'BiRel(Development_Zone, Dataset_Repository, "cleaned labelled images")
'Rel(Development_Zone, Model_Repository, "produces")

' Serving Zone
SystemDb_Ext(Data_Source_Production, "Data_Source_Production", "selected images by User", $tags="SystemDb_colors") 
System_Boundary(System_classifier, "Classifier")  {
    System_Boundary(Serving_Zone, "Serving_Zone")  {
    }
}
Person_Ext(User, "User")

Rel(Development_Zone, Serving_Zone, "ML Models")
Rel(Data_Source_Production, Serving_Zone, "unlabelled images")
Rel_L(User,Serving_Zone, "label validation")
Rel_R(Serving_Zone, User, "proposed labelled images")

' Monitoring Zone
System_Boundary(System_classifier, "Classifier")  {
    System_Boundary(Monitoring_Zone, "Monitoring_Zone")  {
    }
}
Person_Ext(Admin, "Admin")

Rel(Development_Zone, Monitoring_Zone, "ML_Metadata_Repository (current metrics)")
Rel(Serving_Zone, Monitoring_Zone, "Log_Master (original prediction)")
Rel(Serving_Zone, Monitoring_Zone, "Feedback_Database (corrected predictions)")
'Rel(Monitoring_Zone, Dataset_Repository, "updates")
BiRel_D(Admin, Monitoring_Zone, "interacts")

' Continuous Training Zone
System_Boundary(System_classifier, "Classifier")  {
    System_Boundary(Continuous_Training_Zone, "Continuous_Training_Zone")  {
    }
}

'Rel(Code_Repository, Continuous_Training_Zone, "code")
Rel(Monitoring_Zone, Continuous_Training_Zone, "trigger")
Rel(Continuous_Training_Zone, Serving_Zone, "ML Models")
'Rel(Dataset_Repository, Continuous_Training_Zone, "Training/Validation/Test data")
'Rel(Continuous_Training_Zone, Model_Repository, "Updates")
'Rel(Model_Repository, Continuous_Training_Zone, "Gets")

SHOW_FLOATING_LEGEND()

@enduml